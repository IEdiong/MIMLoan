@page "/admin/applications"
@rendermode InteractiveServer

<PageTitle>Loan Applications</PageTitle>

<h3>Loan Applications</h3>

@if (_applications == null)
{
    <p><em>Loading...</em></p>
}
else if (!_applications.Any())
{
    <p>No loan applications found.</p>
}
else
{
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Customer Name</th>
                <th>Email</th>
                <th>Loan Amount</th>
                <th>Status</th>
                <th>Submitted At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in _applications)
            {
                <tr>
                    <td>@app.Id</td>
                    <td>@app.CustomerName</td>
                    <td>@app.Email</td>
                    <td>@app.LoanAmount.ToString("C")</td>
                    <td>
                        <span class="badge @GetBadgeClass(app.Status)">@app.Status</span>
                    </td>
                    <td>@app.SubmittedAt.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => ViewDetails(app.Id)">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<LoanApplication>? _applications;

    protected override async Task OnInitializedAsync()
    {
        _applications = await LoanService.GetAllApplicationsAsync();
    }

    private void ViewDetails(int applicationId)
    {
        NavigationManager.NavigateTo($"/admin/applications/{applicationId}");
    }

    private string GetBadgeClass(ApplicationStatus status)
    {
        return status switch
        {
            ApplicationStatus.Approved => "bg-success",
            ApplicationStatus.Rejected => "bg-danger",
            ApplicationStatus.Pending => "bg-warning",
            _ => "bg-secondary"
        };
    }
}